// <auto-generated />
using System;
using BusinessObjects.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObjects.Migrations
{
    [DbContext(typeof(FuNewsManagementDbContext))]
    [Migration("20250602015736_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleTag", b =>
                {
                    b.Property<string>("ArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ArticleId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ArticleTag", (string)null);

                    b.HasData(
                        new
                        {
                            ArticleId = "ART001",
                            TagId = 1
                        },
                        new
                        {
                            ArticleId = "ART001",
                            TagId = 2
                        },
                        new
                        {
                            ArticleId = "ART001",
                            TagId = 3
                        },
                        new
                        {
                            ArticleId = "ART002",
                            TagId = 2
                        },
                        new
                        {
                            ArticleId = "ART002",
                            TagId = 5
                        },
                        new
                        {
                            ArticleId = "ART003",
                            TagId = 1
                        },
                        new
                        {
                            ArticleId = "ART003",
                            TagId = 6
                        },
                        new
                        {
                            ArticleId = "ART004",
                            TagId = 3
                        },
                        new
                        {
                            ArticleId = "ART004",
                            TagId = 4
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Article", b =>
                {
                    b.Property<string>("ArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ArticleId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = "ART001",
                            CategoryId = 2,
                            Content = "Trong năm 2025, AI đã trở thành một phần không thể thiếu trong cuộc sống hàng ngày. Từ việc tự động hóa quy trình làm việc đến hỗ trợ ra quyết định, AI đang mang lại những thay đổi tích cực...",
                            CreatedAt = new DateTime(2025, 5, 18, 8, 57, 35, 919, DateTimeKind.Local).AddTicks(15),
                            CreatedBy = 2,
                            Headline = "Trí tuệ nhân tạo đang thay đổi cách chúng ta làm việc",
                            ModifiedAt = new DateTime(2025, 5, 23, 8, 57, 35, 919, DateTimeKind.Local).AddTicks(17),
                            ModifiedBy = 2,
                            Source = "FUNews Tech",
                            Status = "Published",
                            Title = "Xu hướng AI trong năm 2025"
                        },
                        new
                        {
                            ArticleId = "ART002",
                            CategoryId = 3,
                            Content = "Hệ thống giáo dục đại học đang trải qua những thay đổi lớn nhằm phù hợp với thời đại số. Các trường đại học đang áp dụng công nghệ mới để nâng cao chất lượng giảng dạy...",
                            CreatedAt = new DateTime(2025, 5, 21, 8, 57, 35, 919, DateTimeKind.Local).AddTicks(21),
                            CreatedBy = 3,
                            Headline = "Những thay đổi mới trong hệ thống giáo dục",
                            ModifiedAt = new DateTime(2025, 5, 25, 8, 57, 35, 919, DateTimeKind.Local).AddTicks(22),
                            ModifiedBy = 3,
                            Source = "FUNews Education",
                            Status = "Published",
                            Title = "Cải cách giáo dục đại học"
                        },
                        new
                        {
                            ArticleId = "ART003",
                            CategoryId = 5,
                            Content = "World Cup 2026 sẽ là giải đấu bóng đá lớn nhất thế giới với sự tham gia của 48 đội tuyển. Các đội tuyển đang tích cực chuẩn bị cho giải đấu này...",
                            CreatedAt = new DateTime(2025, 5, 25, 8, 57, 35, 919, DateTimeKind.Local).AddTicks(24),
                            CreatedBy = 2,
                            Headline = "Các đội tuyển đang tích cực chuẩn bị",
                            ModifiedAt = new DateTime(2025, 5, 28, 8, 57, 35, 919, DateTimeKind.Local).AddTicks(24),
                            ModifiedBy = 1,
                            Source = "FUNews Sports",
                            Status = "Published",
                            Title = "World Cup 2026 - Chuẩn bị cho giải đấu lớn"
                        },
                        new
                        {
                            ArticleId = "ART004",
                            CategoryId = 2,
                            Content = ".NET 8 mang lại nhiều tính năng mới và cải tiến hiệu suất đáng kể. Các nhà phát triển có thể tận dụng những tính năng này để xây dựng ứng dụng hiệu quả hơn...",
                            CreatedAt = new DateTime(2025, 5, 28, 8, 57, 35, 919, DateTimeKind.Local).AddTicks(28),
                            CreatedBy = 3,
                            Headline = "Tính năng mới trong .NET 8",
                            Source = "FUNews Tech",
                            Status = "Draft",
                            Title = "Lập trình với .NET 8"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Tin Tức",
                            CreatedAt = new DateTime(2025, 5, 3, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9955),
                            Description = "Tin tức tổng hợp",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Công Nghệ",
                            CreatedAt = new DateTime(2025, 5, 3, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9958),
                            Description = "Tin tức về công nghệ",
                            IsActive = true,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Giáo Dục",
                            CreatedAt = new DateTime(2025, 5, 3, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9959),
                            Description = "Tin tức giáo dục",
                            IsActive = true,
                            ParentCategoryId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Thể Thao",
                            CreatedAt = new DateTime(2025, 5, 8, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9961),
                            Description = "Tin tức thể thao",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Bóng Đá",
                            CreatedAt = new DateTime(2025, 5, 8, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9962),
                            Description = "Tin tức bóng đá",
                            IsActive = true,
                            ParentCategoryId = 4
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            CreatedAt = new DateTime(2025, 5, 3, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9985),
                            Description = "Tin nóng",
                            TagName = "Hot"
                        },
                        new
                        {
                            TagId = 2,
                            CreatedAt = new DateTime(2025, 5, 3, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9987),
                            Description = "Xu hướng",
                            TagName = "Trending"
                        },
                        new
                        {
                            TagId = 3,
                            CreatedAt = new DateTime(2025, 5, 5, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9988),
                            Description = "Trí tuệ nhân tạo",
                            TagName = "AI"
                        },
                        new
                        {
                            TagId = 4,
                            CreatedAt = new DateTime(2025, 5, 5, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9990),
                            Description = "Lập trình",
                            TagName = "Programming"
                        },
                        new
                        {
                            TagId = 5,
                            CreatedAt = new DateTime(2025, 5, 8, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9991),
                            Description = "Giáo dục",
                            TagName = "Education"
                        },
                        new
                        {
                            TagId = 6,
                            CreatedAt = new DateTime(2025, 5, 13, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9992),
                            Description = "Thể thao",
                            TagName = "Sports"
                        });
                });

            modelBuilder.Entity("BusinessObjects.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 5, 3, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9833),
                            Email = "admin@gmail.com",
                            FullName = "Tran Ngoc Diep",
                            IsActive = true,
                            Password = "123",
                            Role = 0
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 5, 8, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9854),
                            Email = "staff@gmail.com",
                            FullName = "Nguyễn Văn Nam",
                            IsActive = true,
                            Password = "123",
                            Role = 1
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2025, 5, 13, 8, 57, 35, 918, DateTimeKind.Local).AddTicks(9856),
                            Email = "lecturer@gmail.com",
                            FullName = "Trần Thị Lan",
                            IsActive = true,
                            Password = "123",
                            Role = 2
                        });
                });

            modelBuilder.Entity("ArticleTag", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObjects.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusinessObjects.Entities.Article", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Category", b =>
                {
                    b.HasOne("BusinessObjects.Entities.Category", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("BusinessObjects.Entities.Category", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("InverseParentCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
